{
  "comments": [
    {
      "key": {
        "uuid": "f936765b_a6c789dd",
        "filename": "ricsdl-package/ricsdl/backend/fake_db.py",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1000074
      },
      "writtenOn": "2020-01-08T19:05:09Z",
      "side": 1,
      "message": "wonderful.\n\nwhen I instantiate SyncStorage, how do I specify this backend?",
      "revId": "6d0c3c72bfaebdaa54c9da3aa5957bf7e70c580a",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a28c56d_dae27456",
        "filename": "ricsdl-package/ricsdl/backend/fake_db.py",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-01-09T05:40:45Z",
      "side": 1,
      "message": "You set USE_FAKE_DBAAS environment variable to true in your testing env before you initiate an SDL instance in there.",
      "parentUuid": "f936765b_a6c789dd",
      "revId": "6d0c3c72bfaebdaa54c9da3aa5957bf7e70c580a",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7cfb1bb_6637c252",
        "filename": "ricsdl-package/ricsdl/configuration.py",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1000074
      },
      "writtenOn": "2020-01-08T19:05:09Z",
      "side": 1,
      "message": "I see, so this env variable switches the backend? So we instantiate syncstorage as normal, but set an ENV variable in the testing env?",
      "revId": "6d0c3c72bfaebdaa54c9da3aa5957bf7e70c580a",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b3805a7_3c55bc86",
        "filename": "ricsdl-package/ricsdl/configuration.py",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-01-09T05:40:45Z",
      "side": 1,
      "message": "Yes, before initiating SDL instance you set USE_FAKE_DBAAS environment variable. When SDL instance is instantiated, SDL implementation takes either fake or a \u0027real\u0027 Redis backend into use and decision is made based on this USE_FAKE_DBAAS variable value (True \u003d\u003d \u0027use fake\u0027, False/not set \u003d\u003d \u0027use Redis\u0027).\n\nI would like to hear comments/ideas from reviewers if there is better way to tell to SDL what DB backend it should use. I selected environment variable usage here, because we use env variables to configure the real DB backend connection too, this way I didn\u0027t need to do any major code changes either. I think, what ever way we select SDL DB backend, we should avoid possibility that a user of SDL *accidentally* uses fake DB backend instead of the real one. To avoid this I added a crosschecking between USE_FAKE_DBAAS and DBAAS_SERVICE_HOST: SDL throws ValueError if both variables are set but is this enough or should we just instantiate SyncStorage with some optional \u0027testing\u0027 flag and we pass that flag to the backend selection logic in SDL and selection is based only on flag\u0027s value?\nWhat if in the future we get another real DB type (MariaDB for example) how we select then SDL backend type, based on env variable value maybe...",
      "parentUuid": "a7cfb1bb_6637c252",
      "revId": "6d0c3c72bfaebdaa54c9da3aa5957bf7e70c580a",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "33085dad_e1ef6271",
        "filename": "ricsdl-package/ricsdl/configuration.py",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1000074
      },
      "writtenOn": "2020-01-09T11:20:50Z",
      "side": 1,
      "message": "one suggestion: the most natural solution to me was in the constructor. to be honest I find this use of an ENV variable strange and difficult to add more combos of.\n\nconstructor as in in the __init__ for SyncStorage like\n\nclass SyncStorage\n  def __init__(Self, backend\u003dredis):\n       # some check that backend is valid eg backend in {\"redis\", \"dict\", \"maria\"}\n       self.backend\u003dbackend\n\nthen the client does sdl \u003d SyncStorage(backend\u003ddict) \n\nthe default could be redis",
      "parentUuid": "3b3805a7_3c55bc86",
      "revId": "6d0c3c72bfaebdaa54c9da3aa5957bf7e70c580a",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3baaf5a_07532aa2",
        "filename": "ricsdl-package/ricsdl/configuration.py",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-01-09T12:11:26Z",
      "side": 1,
      "message": "Thanks Tommy for the comment.\nI think SDL client should not make decision what is the *real* SDL database type (Redis or MariaDB for example), selection should be hidden inside SDL implementation and decision making should be based on how DBAAS service has been deployed to the system.\n\nHowever I can try to change the code so that SDL client can \u0027activate\u0027 *fake* DB usage when it is initiating SDL instance by using optional parameter (allowed values None, dict) for the constructor. Something like this:\ndef __init__(Self, fake_backend\u003dNone)\nSo this implementation would replace USE_FAKE_DBAAS env variable usage.\nWhat do you think about this solution?",
      "parentUuid": "33085dad_e1ef6271",
      "revId": "6d0c3c72bfaebdaa54c9da3aa5957bf7e70c580a",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7bfc6c95_33788446",
        "filename": "ricsdl-package/ricsdl/configuration.py",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1000074
      },
      "writtenOn": "2020-01-09T12:25:42Z",
      "side": 1,
      "message": "ah I see, I misunderstood. So your point is that the backend is actually chosen by the system and cannot be chosen by the client.\n\nI think the fake_backend is a good solution for testing. I\u0027m fine with what you have too, in this case I don\u0027t think the difference is huge, probably a very slight preference for the init way/.",
      "parentUuid": "f3baaf5a_07532aa2",
      "revId": "6d0c3c72bfaebdaa54c9da3aa5957bf7e70c580a",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0272b485_dc9057a1",
        "filename": "ricsdl-package/ricsdl/configuration.py",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2020-01-09T13:41:41Z",
      "side": 1,
      "message": "OK,I will try the init way, let you know when the change is ready for the review.",
      "parentUuid": "7bfc6c95_33788446",
      "revId": "6d0c3c72bfaebdaa54c9da3aa5957bf7e70c580a",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53",
      "unresolved": true
    }
  ]
}